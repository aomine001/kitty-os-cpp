        -:    0:Source:C:/Users/Piotr/Desktop/Projects/emulator/main.cpp
        -:    0:Graph:C:\Users\Piotr\Desktop\Projects\emulator\cmake-build-debug-coverage\CMakeFiles\emulator.dir\main.cpp.gcno
        -:    0:Data:C:\Users\Piotr\Desktop\Projects\emulator\cmake-build-debug-coverage\CMakeFiles\emulator.dir\main.cpp.gcda
        -:    0:Runs:1
        -:    1:#include <iostream>
        -:    2:#include <vector>
        -:    3:#include <cstdint>
        -:    4:
        -:    5:class MemoryMetadata {
        -:    6:public:
        -:    7:    const uint8_t* gPointer;
        -:    8:    const size_t gLength;
        -:    9:    const uint64_t gLogicalAddress;
        -:   10:
function _ZN14MemoryMetadataC1EPKhyy called 16 returned 100% blocks executed 100%
       16:   11:    MemoryMetadata(const uint8_t* pointer, size_t length, uint64_t log_address)
       16:   12:            : gPointer(pointer), gLength(length), gLogicalAddress(log_address) {}
        -:   13:};
        -:   14:
        -:   15:class Memory {
        -:   16:private:
        -:   17:    std::vector<MemoryMetadata*> gMemoryMappings;
        -:   18:public:
        -:   19:    uint64_t last_address = 0;
function _ZN6MemoryC1Ev called 1 returned 100% blocks executed 100%
        1:   20:    Memory() : gMemoryMappings() {}
        1:   20-block  0
call    0 returned 1
function _ZN6MemoryD1Ev called 1 returned 100% blocks executed 100%
        1:   21:    ~Memory() {
       17:   22:        for (auto& i : gMemoryMappings) {
        1:   22-block  0
call    0 returned 1
call    1 returned 1
       16:   22-block  1
call    2 returned 16
       16:   22-block  2
call    3 returned 16
       17:   22-block  3
call    4 returned 17
branch  5 taken 16
branch  6 taken 1 (fallthrough)
       16:   23:            delete[] i->gPointer;
branch  0 taken 16 (fallthrough)
branch  1 taken 0
       16:   23-block  0
call    2 returned 16
        -:   24:        }
        1:   25:    }
        1:   25-block  0
call    0 returned 1
        -:   26:
function _ZN6Memory9MapMemoryEPKhyy called 16 returned 100% blocks executed 100%
       16:   27:    void MapMemory(const uint8_t* pointer, size_t length, uint64_t where) {
       16:   28:        auto* mm = new MemoryMetadata(pointer, length, where);
       16:   28-block  0
call    0 returned 16
branch  1 taken 16 (fallthrough)
branch  2 taken 0 (throw)
       16:   28-block  1
call    3 returned 16
       16:   29:        gMemoryMappings.push_back(mm);
call    0 returned 16
branch  1 taken 16 (fallthrough)
branch  2 taken 0 (throw)
       16:   30:        last_address += length;
       16:   31:    }
       16:   31-block  0
        -:   32:
        -:   33:    uint8_t ReadByteBe(uint64_t address) {
        -:   34:        for (auto i = 0; gMemoryMappings.size() > i; i++) {
        -:   35:            auto* mme = gMemoryMappings.at(i);
        -:   36:            uint64_t start = mme->gLogicalAddress;
        -:   37:            uint64_t end = start + mme->gLength;
        -:   38:
        -:   39:            if (address >= start && address < end) {
        -:   40:                size_t offset = address - start;
        -:   41:                return mme->gPointer[offset];
        -:   42:            }
        -:   43:        }
        -:   44:        throw std::out_of_range("Address out of mapped range");
        -:   45:    }
        -:   46:};
        -:   47:
function main called 1 returned 100% blocks executed 89%
        1:   48:int main() {
        1:   49:    Memory mem0;
        1:   49-block  0
call    0 returned 1
        -:   50:
        -:   51:    // Create 16 entries of 16MB of memory.
        1:   52:    std::cout << "Creating 16 chunks of 16MB of memory resulting in " << 16 * 16 << " MB of memory." << std::endl;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   52-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   52-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   52-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        -:   53:
       17:   54:    for (auto i = 0; 16 > i; i++) {
        1:   54-block  0
       16:   54-block  1
       17:   54-block  2
branch  0 taken 16
branch  1 taken 1 (fallthrough)
        -:   55:        uint8_t *chunk;
       16:   56:        chunk = new uint8_t[16 * 1024 * 1024];
       16:   56-block  0
call    0 returned 16
branch  1 taken 16 (fallthrough)
branch  2 taken 0 (throw)
       16:   57:        mem0.MapMemory(chunk, 16 * 1024 * 1024, mem0.last_address);
       16:   57-block  0
call    0 returned 16
branch  1 taken 16 (fallthrough)
branch  2 taken 0 (throw)
        -:   58:    }
        -:   59:
        -:   60:
        1:   61:    std::cout << "Hello, World!" << std::endl;
        1:   61-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   61-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   62:    return 0;
        1:   63:}
        1:   63-block  0
call    0 returned 1
    $$$$$:   63-block  1
call    1 never executed
